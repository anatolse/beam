name: Build

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build_ubuntu:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-16.04

    steps:
    - uses: actions/checkout@v2

    - name: Create Build Environment
      run: |
        sudo apt-get install g++-7 libssl-dev curl libxi-dev libcups2-dev
        sudo git clone --depth=1 https://github.com/BeamMW/boost-linux.git /usr/local/boost_1_69_0
        export BOOST_ROOT="/usr/local/boost_1_69_0"
        
    - name: Configure CMake
      env:
        CC: gcc-7
        CXX: g++-7 
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      #working-directory: ${{runner.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: |
        git rev-list HEAD --count
        cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBEAM_LINK_TYPE=Static -DBRANCH_NAME=$GITHUB_REF -DBEAM_HW_WALLET=Off .


    - name: Build
      #working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: make -j$(nproc)

    - name: Test
      #working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest --verbose
      
  build_windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Create Build Environment
      run: |
        git apply 3rdparty/protobuf-patch.diff
        git clone --depth=1 https://github.com/BeamMW/libs.git c:/beam-libs
        
    - name: Configure CMake
      env:
        BOOST_ROOT: C:\Libraries\boost_1_67_0
        OPENSSL_ROOT_DIR: c:\beam-libs\openssl
      run: |
        cmake $GITHUB_WORKSPACE -G "Visual Studio 15 2017 Win64" -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBEAM_LINK_TYPE=Static -DBRANCH_NAME=$GITHUB_REF -DBEAM_BUILD_JNI=On -DBEAM_HW_WALLET=Off .

    - name: Build
      #working-directory: ${{runner.workspace}}/build
      shell: cmd
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --parallel --config $BUILD_TYPE

    - name: Test
      #working-directory: ${{runner.workspace}}/build
      shell: cmd
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C $BUILD_TYPE --verbose
